/*
 * Copyright (c) 2019 Cisco and/or its affiliates.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.cisco.hicn.forwarder"
        minSdkVersion 26
        targetSdkVersion 28
        versionCode 4
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                arguments "" + enableHProxy()
                cppFlags "-std=c++11 -frtti -fexceptions"
            }
        }
        ndk {
            abiFilters 'arm64-v8a', 'x86'
        }

        splits {
            abi {
                reset()
                include "arm64-v8a", 'x86'
            }
        }
    }

    signingConfigs {
        release {
            storeFile file("hicnforwarder.keystore")
            storePassword "hicnforwarder"
            keyAlias "hicnforwarder"
            keyPassword "hicnforwarder"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def appName = "HicnForwarderAndroid"
            outputFileName = appName + ".apk"
        }
    }


    externalNativeBuild {
        cmake {
            path "src/main/jni/CMakeLists.txt"
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

def enableHProxy() {
    if ("${getProjectProperty('ENABLE_HPROXY')}".toInteger() == 1)
        return "-DENABLE_HPROXY=1"
    else
        return "-DENABLE_HPROXY=0"
}

def String getProjectProperty(String propertyName)
{
    String value = "0"
    if (hasProperty(propertyName))
    {
        value = this.properties[propertyName]
    }
    return value
}


repositories {
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'androidx.preference:preference:1.1.0-alpha05'
    implementation 'com.google.android.material:material:1.1.0-alpha05'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'net.cachapa.expandablelayout:expandablelayout:2.9.2'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient-android', version: '4.3.5.1'

    implementation group: 'com.google.collections', name: 'google-collections', version: '1.0'
}
